"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const model_1 = require("../model");
const response_1 = require("../../../data/response");
function register(data) {
    return new Promise(function (resolve, reject) {
        model_1.User.find({
            username: data.username
        }, { _id: true, statusCode: true }).then(function (result) {
            // unverified user
            if (result.some(User => User['statusCode'] === 0)) {
                return resolve({ status: 422, message: response_1.response.ACCOUNT_UNVERIFIED });
            }
            // active user
            if (result.some(User => User['statusCode'] === 1)) {
                return resolve({ status: 422, message: response_1.response.REGISTER_PRESENT });
            }
            // blocked user
            if (result.some(User => User['statusCode'] === 2)) {
                return resolve({ status: 422, message: response_1.response.ACCOUNT_BLOCKED });
            }
            // archived user
            if (result.some(User => User['statusCode'] === 3)) {
                return resolve({ status: 422, message: response_1.response.ACCOUNT_ARCHIVED });
            }
            const user = new model_1.User(data);
            user.save().then(function () {
                resolve({ status: 200, message: response_1.response.REGISTER_SUCCESS });
            }).catch(reject);
        }).catch(reject);
    });
}
exports.register = register;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYXBwaW52ZW50aXZyaC0wNTgvQXNoaXNoLXdvcmsvcmNjL2FwaS9kYi91c2VyL29wZXJhdGlvbnMvcmVnaXN0ZXIudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FwcGludmVudGl2cmgtMDU4L0FzaGlzaC13b3JrL3JjYy9hcGkvZGIvdXNlci9vcGVyYXRpb25zL3JlZ2lzdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0NBQWdDO0FBRWhDLHFEQUFrRDtBQUdsRCxrQkFBeUIsSUFBUztJQUU5QixPQUFPLElBQUksT0FBTyxDQUFDLFVBQVMsT0FBTyxFQUFFLE1BQU07UUFDdkMsWUFBSSxDQUFDLElBQUksQ0FBQztZQUNOLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtTQUMxQixFQUFFLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxNQUFzQjtZQUVsRSxrQkFBa0I7WUFDbEIsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUMvQyxPQUFPLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLG1CQUFRLENBQUMsa0JBQWtCLEVBQUMsQ0FBQyxDQUFDO2FBQ3ZFO1lBRUQsY0FBYztZQUNkLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDL0MsT0FBTyxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxtQkFBUSxDQUFDLGdCQUFnQixFQUFDLENBQUMsQ0FBQzthQUNyRTtZQUVELGVBQWU7WUFDZixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQy9DLE9BQU8sT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsbUJBQVEsQ0FBQyxlQUFlLEVBQUMsQ0FBQyxDQUFDO2FBQ3BFO1lBRUQsZ0JBQWdCO1lBQ2hCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDL0MsT0FBTyxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxtQkFBUSxDQUFDLGdCQUFnQixFQUFDLENBQUMsQ0FBQzthQUNyRTtZQUVELE1BQU0sSUFBSSxHQUFHLElBQUksWUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUM7Z0JBQ2IsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsbUJBQVEsQ0FBQyxnQkFBZ0IsRUFBQyxDQUFDLENBQUM7WUFDL0QsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXJCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFsQ0QsNEJBa0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uL21vZGVsJztcbmltcG9ydCB7IFVzZXJEb2N1bWVudCB9IGZyb20gJy4uL2RvY3VtZW50JztcbmltcG9ydCB7IHJlc3BvbnNlIH0gZnJvbSAnLi4vLi4vLi4vZGF0YS9yZXNwb25zZSc7XG5pbXBvcnQgeyBPcGVyYXRpb25SZXN1bHQgfSBmcm9tICcuLi8uLi8uLi90eXBpbmdzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKGRhdGE6IGFueSk6IFByb21pc2U8T3BlcmF0aW9uUmVzdWx0PiB7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIFVzZXIuZmluZCh7XG4gICAgICAgICAgICB1c2VybmFtZTogZGF0YS51c2VybmFtZVxuICAgICAgICB9LCB7X2lkOiB0cnVlLCBzdGF0dXNDb2RlOiB0cnVlfSkudGhlbihmdW5jdGlvbihyZXN1bHQ6IFVzZXJEb2N1bWVudFtdKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIHVudmVyaWZpZWQgdXNlclxuICAgICAgICAgICAgaWYgKHJlc3VsdC5zb21lKFVzZXIgPT4gVXNlclsnc3RhdHVzQ29kZSddID09PSAwKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtzdGF0dXM6IDQyMiwgbWVzc2FnZTogcmVzcG9uc2UuQUNDT1VOVF9VTlZFUklGSUVEfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGFjdGl2ZSB1c2VyXG4gICAgICAgICAgICBpZiAocmVzdWx0LnNvbWUoVXNlciA9PiBVc2VyWydzdGF0dXNDb2RlJ10gPT09IDEpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoe3N0YXR1czogNDIyLCBtZXNzYWdlOiByZXNwb25zZS5SRUdJU1RFUl9QUkVTRU5UfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGJsb2NrZWQgdXNlclxuICAgICAgICAgICAgaWYgKHJlc3VsdC5zb21lKFVzZXIgPT4gVXNlclsnc3RhdHVzQ29kZSddID09PSAyKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtzdGF0dXM6IDQyMiwgbWVzc2FnZTogcmVzcG9uc2UuQUNDT1VOVF9CTE9DS0VEfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGFyY2hpdmVkIHVzZXJcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc29tZShVc2VyID0+IFVzZXJbJ3N0YXR1c0NvZGUnXSA9PT0gMykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZSh7c3RhdHVzOiA0MjIsIG1lc3NhZ2U6IHJlc3BvbnNlLkFDQ09VTlRfQVJDSElWRUR9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKGRhdGEpO1xuICAgICAgICAgICAgdXNlci5zYXZlKCkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHtzdGF0dXM6IDIwMCwgbWVzc2FnZTogcmVzcG9uc2UuUkVHSVNURVJfU1VDQ0VTU30pO1xuICAgICAgICAgICAgfSkuY2F0Y2gocmVqZWN0KTtcblxuICAgICAgICB9KS5jYXRjaChyZWplY3QpO1xuICAgIH0pO1xufVxuXG4iXX0=